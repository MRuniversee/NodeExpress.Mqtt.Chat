doctype html
html
  header
    title Chat Page #{username}
    link(rel='stylesheet' href='design/bootstrap/dist/css/bootstrap.min.css')
    link(rel='stylesheet' href='design/custom/style.css')
  body
    block content

    footer.thisfooter

      p Copyright &copy; 2017 Renato Bylykbashi
      script(src='design/jquery/dist/jquery.min.js')
      script(src='https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js')
      script(type='text/javascript').
       // let Users = '#{theOnlineUsers}'.split(',');                                // split the names on ,
       let Users = [];
       let currentUser ="client_#{username}";
       client = new Paho.MQTT.Client('127.0.0.1', 80 , 'client_#{username}');     // create client
       client.connect({onSuccess:onConnect});                                     // connect client
       if(Users.length>0 && Users[0]!=''){
         for(var i=0;i<Users.length;i++){
           $('.chat_body').append('<div class="user" id="'+ Users[i] + '" onclick="sendMsg(\''+ Users[i] + '\')">'+ Users[i] +'<div>'); // add currently online users 
         }
       }
       // Do this when client connects -------------------------------------------------------
       function onConnect() {
        console.log("Connected to chatroom !");
        client.subscribe("chatroom/client_#{username}",1);      // Topic for each client to recieve 
        client.subscribe("chatroomOnlineUsers",1);              // Show that new user has logged in
        message = new Paho.MQTT.Message('client_#{username}');  //  |
        message.destinationName = "chatroomOnlineUsers";        //  |
        message.qos = 1;                                        //  |
        client.send(message);                                   //  publish username when you connect to mqtt broker 
       }
       // Do this when a message arrives from subscribed topics  --------------------------------------------------
       client.onMessageArrived = function onMessageArrived(message){
         //TODO --  Maybe add ajax request for current online Users after new login !!
         if(message.destinationName == 'chatroomOnlineUsers' && message.payloadString != 'client_#{username}'){
           checkTheUsers();
         }else{
           if(message.payloadString!='client_#{username}'){
             themsg = message.payloadString.split('~/,');
             gotMessage(themsg[0],themsg[1]);
           }
         }
       }
       // Get the online users --------------------------------------------------------------------------------------
       $(document).ready(checkTheUsers());
       
       function checkTheUsers() { 
          let i = 0;
          $('.chat_body').empty();
          $.ajax({
              type: 'GET', 
              url: 'http://localhost:3000/getusers', 
              data: {}, 
              dataType: 'json',
              success: function (data) { 
                  data.forEach(function(usar){
                    if(usar != 'client_#{username}'){
                      $('.chat_body').append('<div class="user" id="'+ usar + '" onclick="sendMsg(\''+ usar + '\')">'+ usar +'<div>');
                    }
                  })
              }
            });
       }
      script(src='design/scripts/chatScript.js')
